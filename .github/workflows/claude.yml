name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    # Only run when @claude is mentioned or issue is assigned to claude[bot]
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.title, '@claude') || contains(github.event.issue.body, '@claude') || github.event.issue.assignee.login == 'claude[bot]')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))

    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for worktree support

      - name: Run Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          # Use OAuth token for authentication
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Worktree and branch protection configuration
          cli_args: |
            --worktree-aware

          # System prompt to enforce worktree protocol and main branch protection
          system_prompt: |
            CRITICAL WORKTREE AND BRANCH PROTECTION RULES:

            1. **NEVER push directly to main/master branch**
            2. **ALWAYS work in worktrees for feature development**
            3. **ALWAYS ask user permission before pushing to main/master**
            4. **Follow the worktree protocol in .claude/WORKTREE-PROTOCOL.md**

            Before any push operation to main/master:
            - Summarize changes clearly
            - Ask user for explicit approval
            - Only push after receiving confirmation

            For feature work:
            - Create worktree using worktree-manager.ps1
            - Work in the worktree directory
            - Create PR from feature branch
            - Wait for user approval before merging to main
